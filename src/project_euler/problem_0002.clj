(ns project-euler.problem-0002)

;; Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
;; first 10 terms will be:
;;
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;
;; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
;; even-valued terms.

;; Solution
;;
;; I can't see any way to do this more efficiently than just brute force.

(def fibonacci
  (map first
       (iterate
        (fn [[x y]] [y (+ x y)])
        [0 1])))

(defn calculate-answer []
  (reduce + (for [x fibonacci :when (even? x) :while (< x 4000000)] x)))






 



